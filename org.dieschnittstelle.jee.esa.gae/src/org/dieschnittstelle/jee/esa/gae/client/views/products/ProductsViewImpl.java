package org.dieschnittstelle.jee.esa.gae.client.views.products;

import java.util.List;

import org.dieschnittstelle.jee.esa.gae.client.common.AbstractView;
import org.dieschnittstelle.jee.esa.gae.shared.entities.dto.CampaignExecutionDTO;
import org.dieschnittstelle.jee.esa.gae.shared.entities.dto.ProductBundleDTO;

import com.google.gwt.core.client.GWT;
import com.google.gwt.uibinder.client.UiBinder;
import com.google.gwt.uibinder.client.UiField;
import com.google.gwt.user.cellview.client.CellTable;
import com.google.gwt.user.client.ui.FlowPanel;
import com.google.gwt.user.client.ui.Grid;
import com.google.gwt.user.client.ui.Image;
import com.google.gwt.user.client.ui.Label;
import com.google.gwt.user.client.ui.Widget;
import com.google.inject.Inject;

public class ProductsViewImpl extends AbstractView implements ProductsView {

	@UiField
	protected Grid producttable;

	List<CampaignExecutionDTO> executions;
	// @UiField
	// protected FlowPanel panelproduct;
	// @UiField
	// protected Grid producttable;

	private static ProductsViewImplUiBinder uiBinder = GWT
			.create(ProductsViewImplUiBinder.class);

	interface ProductsViewImplUiBinder extends
			UiBinder<Widget, ProductsViewImpl> {
		// TODO Generated by GWT
	}

	private Presenter presenter;

	@Inject
	public ProductsViewImpl() {
		content.add(uiBinder.createAndBindUi(this));

	}

	@Override
	public void setPresenter(final Presenter presenter) {
		this.presenter = presenter;
	}

	@Override
	public void setCampaignsExecutions(List<CampaignExecutionDTO> execution) {
		this.executions = execution;
		setCampaignsExecutions();

	}

	public void setCampaignsExecutions() {
		if (executions != null && !executions.isEmpty()) {
			producttable = new Grid(0, 4);
			producttable.setStyleName("tablep");
			int i = 0;
			for (CampaignExecutionDTO execution : executions) {
				List<ProductBundleDTO> products = execution.getCampaign()
						.getBundles();
				if (products != null && !products.isEmpty()) {
					for (ProductBundleDTO product : products) {
						producttable.resizeRows(i + 1);
						producttable.setWidget(i, 0, new Label(execution
								.getTouchpoint().getName()
								+ ", "
								+ execution.getTouchpoint().getAddress()));
						producttable.setWidget(i, 1, new Label(product
								.getProduct().getName()));
						producttable.setWidget(i, 2, new Label(product
								.getProduct().getPrice() + ""));
						producttable
								.setWidget(
										i,
										3,
										new Image(
												"DieSchnittstelle/gwt/standard/images/LupeKlein.png"));
						i++;
					}
				}
			}
		}
		content.add(producttable);
	}
	// @UiHandler("button")
	// void onButtonPressed(ClickEvent e) {
	// Window.alert("Clicked Me");
	// }
}
